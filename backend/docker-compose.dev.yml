version: "3.5"

networks:
  glos-app-network:
    driver: bridge

services:
  eureka-server:
    build:
      context: .
      dockerfile: ./eureka-service/Dockerfile
    image: eureka-server
    container_name: eureka-server
    restart: always
    ports:
      - "9001:9001"
    networks:
      - glos-app-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://eureka-server:9001/api/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    environment:
      SERVER_ADDRESS: eureka-server
      SERVER_PORT: 9001
      SERVER_CONTEXT_PATH: /api
      EUREKA_CLIENT_DEFAULT_ZONE: http://eureka-server:9001/api/eureka
  api-gateway:
    build:
      context: .
      dockerfile: ./api-gateway/Dockerfile
    depends_on:
      eureka-server:
        condition: service_healthy
    image: api-gateway
    container_name: api-gateway
    restart: always
    ports:
      - "9002:9002"
    networks:
      - glos-app-network
    environment:
      SERVER_ADDRESS: api-gateway
      SERVER_PORT: 9002
      SERVER_CONTEXT_PATH: /api
      EUREKA_CLIENT_DEFAULT_ZONE: http://eureka-server:9001/api/eureka/
  minio:
    image: minio/minio:latest
    container_name: minio
    networks:
      - glos-app-network
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    command: server ~/minio --console-address :9097
    ports:
      - '9097:9097'
      - '9000:9000'
    volumes:
      - ./minio-data:/minio
